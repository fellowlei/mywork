<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

       <!-- 定义目标对象 -->
       <bean name="userDao" class="com.mark.frame.aop.UserDaoImpl"></bean>

       <!-- 定义切面 -->
       <bean name="myAspectXML" class="com.mark.frame.aop.xml.MyAspectXML"></bean>

       <aop:config>
              <!-- 定义切点函数 -->
              <aop:pointcut id="pointcut" expression="execution(* com.mark.frame.aop.UserDao.*(..))"></aop:pointcut>

              <!-- 定义其他切点函数 -->
              <aop:aspect ref="myAspectXML" order="0">
                     <!-- 定义通知 method 指定通知方法名,必须与MyAspectXML中的相同 pointcut 指定切点函数-->
                     <aop:before method="before" pointcut-ref="pointcut"></aop:before>

                     <!-- 后置通知  returning="returnVal" 定义返回值 必须与类中声明的名称一样-->
                     <aop:after-returning method="afterReturn" pointcut-ref="pointcut" returning="val"></aop:after-returning>

                     <!-- 环绕通知 -->
                     <aop:around method="around" pointcut-ref="pointcut"></aop:around>

                     <!--异常通知 throwing="throwable" 指定异常通知错误信息变量,必须与类中声明的名称一样-->
                     <aop:after-throwing method="afterThrowing" pointcut-ref="pointcut" throwing="throwable"></aop:after-throwing>

                     <!-- method : 通知的方法(最终通知) pointcut-ref : 通知应用到的切点方法-->
                     <aop:after method="after" pointcut-ref="pointcut"></aop:after>
              </aop:aspect>
       </aop:config>


</beans>